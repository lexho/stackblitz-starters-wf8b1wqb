let selectedVersion="latest",workers=[],filenames=[],progresses=[];function compressImage(t,s,i){return new Promise((r,e)=>{var o=i+"-progress",n=(document.querySelector(i+"-log"),document.querySelector(o)),o=(console.log("image to compress: ",t.name),imageCompression.getExifOrientation(t).then(function(e){console.log("ExifOrientation",e)}),controller="undefined"!=typeof AbortController&&new AbortController,{maxSizeMB:1,maxWidthOrHeight:1024,useWebWorker:s,onProgress:function(e){progresses[t.name]=e;let r=0;for(var o of filenames){if(void 0===progresses[o])break;o=progresses[o];r+=o}r/=filenames.length,n.innerHTML="("+Math.round(r)+"%)"},preserveExif:!0,libURL:"https://cdn.jsdelivr.net/npm/browser-image-compression@"+selectedVersion+"/dist/browser-image-compression.js"});controller&&(o.signal=controller.signal),imageCompression(t,o).then(function(e){perpareUploadToServer(e,t.name,i),r()}).catch(function(e){alert(e.message),reh()})})}function abort(){controller&&controller.abort(new Error("I just want to stop"))}let formData=new FormData,counter=1;function perpareUploadToServer(e,r){formData.append("photos",e,r),counter++}