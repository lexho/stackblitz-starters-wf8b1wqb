let selectedVersion="latest",workers=[],filenames=[],progresses=[];function compressImages(e,o,t){for(var r of e.target.files)filenames.push(r.name),workers.push(compressImage(r,o,t));Promise.all(workers).then(e=>{console.log("compression finished");var o=document.getElementById("submit");o.setAttribute("onClick","submit();"),o.setAttribute("class","btn btn-primary")})}function compressImage(n,s,a){return new Promise((o,e)=>{var t=a+"-progress",r=(document.querySelector(a+"-log"),document.querySelector(t)),t=(console.log("image to compress: ",n.name),imageCompression.getExifOrientation(n).then(function(e){console.log("ExifOrientation",e)}),controller="undefined"!=typeof AbortController&&new AbortController,{maxSizeMB:1,maxWidthOrHeight:1024,useWebWorker:s,onProgress:function(e){workers.length;progresses[n.name]=e;let o=0;for(var t of filenames){if(void 0===progresses[t])break;t=progresses[t];o+=t}o/=filenames.length,r.innerHTML="("+Math.round(o)+"%)"},preserveExif:!0,libURL:"https://cdn.jsdelivr.net/npm/browser-image-compression@"+selectedVersion+"/dist/browser-image-compression.js"});controller&&(t.signal=controller.signal),imageCompression(n,t).then(function(e){perpareUploadToServer(e,a),o()}).catch(function(e){alert(e.message),reh()})})}function abort(){controller&&controller.abort(new Error("I just want to stop"))}let formData=new FormData,counter=1;function perpareUploadToServer(e,o){document.getElementById("heading1").value,document.getElementById("layout").value,document.getElementById("text").value;formData.append("photos",e,"file"+counter),counter++}function submit(){var e=document.getElementById("heading1").value,o=document.getElementById("layout").value,t=document.getElementById("text").value;formData.set("heading",e),formData.set("layout",o),formData.set("text",t);let r="/"+e.toLowerCase().replaceAll(" ","");return fetch("/page/save",{method:"POST",body:formData}).then(e=>{window.open(r,"_self")}).then(e=>console.log("got server response",e))}