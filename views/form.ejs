<%- include('_header'); %>
<style>
    .form-select {
        max-width: 300px;
    }
    input {
        max-width: 300px;
    }
    textarea {
        max-width: 600px;
        height: 250px;
    }
</style>
<div class="container">
    <h2><%= title1 %></h2>
    <div class="mb-3">Layout: 
        <select id="layout" class="form-select" name="layout" onchange="change(this)" aria-label="Layout select" >
          <option selected>text-with-title</option>
          <option>gallery</option>
        </select>
    </div>
    <div class="mb-3" id="heading">
        <label for="heading" class="form-label">Überschrift</label>
        <input id="heading1" type="text" name="heading" class="form-control" aria-describedby="heading" value="Neue Seite" />
    </div>
    <div id="fotosbox" class="mb-3" style="display: none;">
        <label for="fotos" class="form-label">Fotos</label><br />
        <div>
          <label for="web-worker1">
            <span id="web-worker1-progress"></span>
            <input id="web-worker1" type="file" multiple="multiple" accept="image/*" onchange='compressImages(event, true, "#web-worker1");' />
          </label>
          <p id="web-worker1-log"></p>
        </div>
        <hr />
    </div>
    <div id="textbox" class="mb-3">
        <label for="text" class="form-label">Text</label>
        <textarea id="text" name="text" class="form-control" aria-label="text" ></textarea></div>
    <input id="submit" type="text" class="btn btn-primary" onClick="submit();" value="Upload" />
    <script>
        function change(selectObject) {
            layout = selectObject.value
            let submitButton = document.getElementById("submit")
            if(selectObject.value == "gallery") {
                document.getElementById("fotosbox").style.display = "block"
                document.getElementById("textbox").style.display = "none"
                submitButton.setAttribute("class", "btn btn-secondary")
                submitButton.setAttribute("onClick", "")
            } else {
                document.getElementById("fotosbox").style.display = "none"
                document.getElementById("textbox").style.display = "block"
                submitButton.setAttribute("class", "btn btn-primary")
            }
        }
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/core-js/3.21.1/minified.min.js"
    integrity="sha512-U2gvuX8NaNSc0MOOvd1CTMp/kuzhlJ8HJKWF4G8JAw66iH+1keU5Mrzzrnqktf1SphOCow6dy69sTdblJdI8mA=="
    crossorigin="anonymous" referrerpolicy="no-referrer"></script>
  <script type="text/javascript"
    src="https://cdn.jsdelivr.net/npm/browser-image-compression@latest/dist/browser-image-compression.js"></script>
    <!--<script type="text/javascript" src="http://localhost:8080/js/utility.js"></script>-->
  <script>
    let selectedVersion = 'latest'
    let workers = []
    let filenames = []
    let journal = [];
    function compressImages(event, useWebWorker, imageID) { // imageID brauch ma doch für log
      for(let file of event.target.files) {
        filenames.push(file.name)
        workers.push(compressImage(file, useWebWorker, imageID))
      }
      Promise.all(workers).then(
        (values) => {
            console.log("compression finished"); 
            let submitButton = document.getElementById("submit")
            submitButton.setAttribute("onClick", "submit();")
            submitButton.setAttribute("class", "btn btn-primary")
        } 
    )
    }
    function compressImage(file, useWebWorker, imageID) {
        return new Promise((res, rej) => {
      var logDom, progressDom;
      const log = imageID + "-log"
      const progress = imageID + "-progress"
      logDom = document.querySelector(log); //#web-worker1-log
      progressDom = document.querySelector(progress);

      console.log("input", file.name);
      imageCompression.getExifOrientation(file).then(function (o) {
        console.log("ExifOrientation", o);
      });

      controller = typeof AbortController !== 'undefined' && new AbortController();

      // modified options
      var options = {
        maxSizeMB: 1,//parseFloat(document.querySelector("#maxSizeMB").value),
        maxWidthOrHeight: 1024, //parseFloat(
          //document.querySelector("#maxWidthOrHeight").value
        //),
        useWebWorker: useWebWorker,
        onProgress: onProgress,
        preserveExif: true,
        libURL: "https://cdn.jsdelivr.net/npm/browser-image-compression@"+selectedVersion+"/dist/browser-image-compression.js"
      };
      if (controller) {
        options.signal = controller.signal;
      }
      imageCompression(file, options)
        .then(function (output) {
          perpareUploadToServer(output, imageID); // return 
          res();
        })
        .catch(function (error) {
          alert(error.message);
          reh();
        });

      function onProgress(p) {
        let anzahl = workers.length
        journal.push({ tag: file.name, p: p }) // tag, progress
        // get latest progress
        let p_gesamt = 0
        let queries  = 0;
        for(let name of filenames) {
          let p_max = 0
          for(let i = journal.length-1; i >= 0; i--) {
            const entry = journal[i];
            queries++
            if(entry.tag == name && entry.p > p_max) { 
              p_max = entry.p;
              break;
             }// get max progress
          }
          p_gesamt += p_max
        }
        //console.log("queries:", queries)
        p_gesamt /= anzahl
        //console.log(JSON.stringify(filenames))
        //console.log(JSON.stringify(journal))
        //console.log("onProgress", file.name, p);
        //console.log("onProgress gesamt", p_gesamt);
        progressDom.innerHTML = "(" + Math.round(p_gesamt) + "%" + ")";
      }
        });
    }

    function abort() {
      if (!controller) return
      controller.abort(new Error('I just want to stop'));
    }

    const formData = new FormData()
       let counter = 1;

    function perpareUploadToServer(file, imageID) {
        let heading = document.getElementById("heading1").value
        let layout = document.getElementById("layout").value
        let text = document.getElementById("text").value

       formData.append('photos', file, "file" + counter) // multiple files
       counter++
       console.log("formData: " + JSON.stringify(formData))
    }

    function submit() {
        let heading = document.getElementById("heading1").value
        let layout = document.getElementById("layout").value
        let text = document.getElementById("text").value

        formData.set('heading', heading)
        formData.set('layout', layout)
        formData.set('text', text)
        const url = '/page/save'
        
        let path = "/" + heading.toLowerCase().replaceAll(" ", "") //replaceUmlaute(heading.toLowerCase().replaceAll(" ", ""))
        return fetch(url, {
          method: 'POST',
          body: formData
        }).then(res => {/*console.log(res);*/ window.open(path,"_self") })
          .then(body => console.log('got server response', body))
    }
  </script>
  </div>
    </body>
</html>
<%- include('_footer'); %>